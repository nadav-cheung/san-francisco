# 命名空间
apiVersion: v1
kind: Namespace
metadata:
  name: dev

---
# 配置信息
apiVersion: v1
kind: ConfigMap
metadata:
  name: san-francisco
  namespace: dev
data:
  key: "value"
  debug: "false"
---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: san-francisco
  namespace: dev
  labels:
    app: san-francisco
    environment: dev
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: san-francisco-pod
  template:
    metadata:
      name: san-francisco-pod
      namespace: dev
      annotations:
        name: san-francisco-annotation
        environment: dev
      labels:
        app: san-francisco-pod
        environment: dev
    spec:
      containers:
        - name: san-francisco
          image: san-francisco-web:1.0.0
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/app-logs/san-francisco
              name: app-logs
          env:
            - name: spring.profiles.active
              value: dev
            - name: JAVA_OPTS
              value: "-Xmx1024M"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: K8S_POD_SERVICE_ACCOUNT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: LIMITS_CPU
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
                  containerName: san-francisco
            - name: LIMITS_MEMORY
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
                  containerName: san-francisco
            - name: REQUESTS_CPU
              valueFrom:
                resourceFieldRef:
                  resource: requests.cpu
                  containerName: san-francisco
            - name: REQUESTS_MEMORY
              valueFrom:
                resourceFieldRef:
                  resource: requests.memory
                  containerName: san-francisco
          resources:
            limits:
              cpu: 1000m
              memory: 1G
            requests:
              cpu: 50m
              memory: 120Mi
          livenessProbe:
            httpGet:
              port: 8080
              path: /san-francisco/actuator/health/liveness
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              port: 8080
              path: /san-francisco/actuator/health/readiness
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
            initialDelaySeconds: 10
          startupProbe:
            httpGet:
              port: 8080
              path: /san-francisco/actuator/health/readiness
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 22
            initialDelaySeconds: 10
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "echo postStart >> /opt/app-logs/san-francisco/lifecycle.log"
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "echo preStop >> /dev/termination-log"
      restartPolicy: Always
      terminationGracePeriodSeconds: 40
      volumes:
        - name: app-logs
          emptyDir:
            { }
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---

# 动态更新Pod
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: san-francisco-hpa
  namespace: dev
spec:
  maxReplicas: 6
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: san-francisco
  targetCPUUtilizationPercentage: 85
---

# service
apiVersion: v1
kind: Service
metadata:
  name: san-francisco-server
  namespace: dev
  labels:
    app: san-francisco-server
spec:
  selector:
    app: san-francisco-pod
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: 8080-8080
  type: ClusterIP
  sessionAffinity: None
  publishNotReadyAddresses: true
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: san-francisco-ingress
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: san-francisco.nadav.com.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: san-francisco-server
                port:
                  number: 8080